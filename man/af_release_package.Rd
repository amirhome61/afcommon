% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/af_packages.R
\name{af_release_package}
\alias{af_release_package}
\title{Automate R Package Release Workflow}
\usage{
af_release_package(
  package_path = ".",
  github_repo,
  version_bump = "minor",
  initial_version = NULL,
  release_message = NULL
)
}
\arguments{
\item{package_path}{Character string specifying the path to the root folder of the package.
Defaults to the current working directory `"."`.}

\item{github_repo}{Character string specifying the GitHub repository in the format
`"username/repo"`. This is used to push changes and install the release from GitHub.}

\item{version_bump}{Character string specifying which part of the semantic version to increment.
Must be one of `"patch"`, `"minor"`, or `"major"`. Defaults to `"minor"`.}

\item{initial_version}{Optional character string specifying the version to use for the first release.
If provided, the function will use this version instead of incrementing.}

\item{release_message}{Optional character string specifying a description for this release.
Used as the Git tag message and GitHub release body.}
}
\value{
The new version string (character) after incrementing.
}
\description{
`af_release_package()` automates the process of releasing a new version of an R package.
It increments the package version, updates documentation using roxygen2, commits all changes,
creates a Git tag, pushes commits and the tag to GitHub, and installs the new release locally.
}
\details{
This function is designed to be reusable for any R package. It requires that the working directory
contains a valid R package structure with a DESCRIPTION file and that Git is initialized with a
remote repository configured.


Steps performed by this function:
1. Determine the new package version (optionally using `initial_version`).
2. Update documentation using roxygen2.
3. Stage and commit all changes in Git.
4. Create an annotated Git tag with the release message.
5. Push commits and tag to GitHub.
6. Create a GitHub release with the provided release message.
7. Install the package from GitHub and load it.
}
\examples{
\dontrun{
af_release_package(
  package_path = "C:/Users/USER/Dropbox/Amir/Amir personal/R/afcommon",
  github_repo = "amirhome61/afcommon",
  version_bump = "minor" # Options: "patch", "minor", "major",
  initial_version = NULL # e.g., "0.1.0" for first release,
  release_message = "Added new utility functions and updated workflow documentation"
)
}

}
